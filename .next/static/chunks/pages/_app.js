/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[2]!./styles/styles.css":
/*!*******************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[2]!./styles/styles.css ***!
  \*******************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/getUrl.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/getUrl.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _public_images_lawn_jpeg__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../public/images/lawn.jpeg */ \"./public/images/lawn.jpeg\");\n/* harmony import */ var _public_images_mowing_png__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../public/images/mowing.png */ \"./public/images/mowing.png\");\n/* harmony import */ var _public_images_planting_png__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../public/images/planting.png */ \"./public/images/planting.png\");\n/* harmony import */ var _public_images_digger_png__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../public/images/digger.png */ \"./public/images/digger.png\");\n// Imports\n\n\n\n\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_public_images_lawn_jpeg__WEBPACK_IMPORTED_MODULE_2__);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_public_images_mowing_png__WEBPACK_IMPORTED_MODULE_3__);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_public_images_planting_png__WEBPACK_IMPORTED_MODULE_4__);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_public_images_digger_png__WEBPACK_IMPORTED_MODULE_5__);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* ------------\\nGlobal Elements\\n---------------*/\\n* { \\n\\tbox-sizing: border-box;\\n}\\nhtml, body {\\n\\tmin-height: 100%;\\n    background-color: #3a3535;\\n\\tcolor: #000;\\n}\\n\\t/* sets the body height of the browser, so that backgrounds and div heights work correctly. Color and background will almost certainly be altered; they are just placeholders */\\n\\t\\nbody {\\n\\tfont-size: 1.4rem;\\n\\ttext-rendering: optimizeLegibility;\\n    font-family: 'Encode Sans', sans-serif;\\n    margin: 0;\\n}\\np{\\n    font-size: 1rem;\\n}\\n\\t\\n\\t\\n\\n/* Mobile Menu */\\n.mobile-container{\\n    margin: auto;\\n    \\n    height:700px;\\n    color: #fff;\\n    border-radius: 10px;\\n    background-image: linear-gradient(rgba(0,0,0 ,0.3) ,rgba(0,0,0,0.3)), url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");\\n    background-size: cover;\\n    background-position: center;\\n    background-repeat: no-repeat;\\n}\\n\\n.topnav{\\n    overflow: hidden;\\n    background-color: #333;\\n    position: relative;\\n}\\n.topnav #menuItems{\\n    display: none;\\n}\\n.topnav a{\\n    color: white;\\n    padding: 14px 16px;\\n    text-decoration: none;\\n    font-size: 17px;\\n    display: block;\\n}\\n.topnav a.icon {\\n    background: #14a76c;\\n    display: block;\\n    position: absolute;\\n    right: 0;\\n    top: 0;\\n  }\\n  \\n  .topnav a:hover {\\n    background-color: #ddd;\\n    color: black;\\n  }\\n\\n  .active {\\n    background-color: #14a76c;\\n    color: white;\\n  }\\n  .desktop-nav{\\n      display: none;\\n  }\\n  /* Home Section */\\n\\n  .home{\\n      position: relative;\\n  }\\n\\n  .company-title{\\n      position: absolute;\\n      top: 50%;\\n      left: 50%;\\n      transform: translateX(-50%) translateY(75%) ;\\n      font-size: 3.5rem;\\n      text-align: center;\\n  }\\n\\n  .tel{\\n      position: absolute;\\n      top: 50%;\\n      left: 50%;\\n      font-size: 1.4rem;\\n      transform: translateX(-50%) translateY(1025%);\\n      text-align: center;\\n      color: inherit;\\n      text-decoration: none;\\n  }\\n  .explore{\\n      position: absolute;\\n      top: 50%;\\n      left: 50%;\\n      font-size: 2rem;\\n      transform: translateX(-50%) translateY(1080%);\\n      text-align: center;\\n  }\\n  .explored{\\n    padding: 0.8rem 2.6rem;\\n    border-radius: 1rem;\\n    background: #14a76c;\\n    border: none;\\n    color: #fff;\\n    font-size: 1rem;\\n  }\\n  .explored:hover{\\n      cursor: pointer;\\n  }\\n  #app{\\n      display: none;\\n  }\\n\\n  /* Media Queries Home */\\n  @media screen and (min-width: 980px){\\n      .mobile-container{\\n          background: #366355;\\n          height: 1000px;\\n      }\\n     \\n      .company-title{\\n          display: none;\\n      }\\n      .topnav{\\n          display: none;\\n      }\\n      .iconic{\\n        height: auto;\\n        width:100px;\\n    }\\n      .desktop-nav{\\n        display: flex;\\n        justify-content: space-between;\\n        flex-direction: row;\\n      }\\n      .nav-menu{\\n          display: inline-flex;\\n      }\\n      .desktop-items{\\n          padding: 20px;\\n          list-style: none;\\n      }\\n      .desktop-items a{\\n          color: #fff;\\n          text-decoration: none;\\n          cursor: pointer;\\n      }\\n      .desktop-items a:hover{\\n          color: yellow;\\n      }\\n      .active{\\n        background-color: inherit;\\n      }\\n      #app{\\n          z-index: 100;\\n          display: block;\\n      }\\n      #app{\\n          display: grid;\\n          grid-template-columns: 1fr 2fr;\\n          align-items: center;\\n          padding-bottom: 4vmin;\\n          height: 90vh;\\n          width: 100%;\\n          background: inherit;\\n          color: #fff;\\n      }\\n      .titles{\\n        padding-left: 1em;\\n        grid-column: 1 / -1;\\n        grid-row: 1; \\n        font-size: 7vw;\\n        width: 100%;\\n        z-index: 2;\\n        margin-top: 300px;\\n      }\\n      .titles > .titles-inner{\\n          display: inline-block;\\n      }\\n      @-webkit-keyframes text-clip {\\n        from {\\n          -webkit-clip-path: polygon(0% 100%, 100% 100%, 100% 100%, 0% 100%);\\n                  clip-path: polygon(0% 100%, 100% 100%, 100% 100%, 0% 100%);\\n        }\\n        to {\\n          -webkit-clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);\\n                  clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);\\n        }\\n      }\\n      @keyframes text-clip {\\n        from {\\n          -webkit-clip-path: polygon(0% 100%, 100% 100%, 100% 100%, 0% 100%);\\n                  clip-path: polygon(0% 100%, 100% 100%, 100% 100%, 0% 100%);\\n        }\\n        to {\\n          -webkit-clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);\\n                  clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);\\n        }\\n      }\\n      \\n      @-webkit-keyframes outer-left {\\n        from {\\n          transform: translateX(50%);\\n        }\\n        to {\\n          transform: none;\\n        }\\n      }\\n      \\n      @keyframes outer-left {\\n        from {\\n          transform: translateX(50%);\\n        }\\n        to {\\n          transform: none;\\n        }\\n      }\\n      \\n      @-webkit-keyframes inner-left {\\n        from {\\n          transform: translateX(-50%);\\n        }\\n        to {\\n          transform: none;\\n        }\\n      }\\n      \\n      @keyframes inner-left {\\n        from {\\n          transform: translateX(-50%);\\n        }\\n        to {\\n          transform: none;\\n        }\\n      }\\n      .cla,\\n      .landscaping{\\n        -webkit-animation: outer-left 1s 1s cubic-bezier(0.5, 0, 0.1, 1) both;\\n                animation: outer-left 1s 1s cubic-bezier(0.5, 0, 0.1, 1) both;\\n    }\\n\\n    .titles-inner {\\n    display: inline-block;\\n    -webkit-animation: inner-left 1s 1s ease both;\\n            animation: inner-left 1s 1s ease both;\\n    }\\n\\n    .clainner {\\n    display: inline-block;\\n    -webkit-animation: inner-left 1s 1s ease both,\\n        text-clip 1s 0s cubic-bezier(0.5, 0, 0.1, 1) both;\\n            animation: inner-left 1s 1s ease both,\\n        text-clip 1s 0s cubic-bezier(0.5, 0, 0.1, 1) both;\\n    }\\n\\n    .landscapinginner {\\n    -webkit-animation: text-clip 1s 0s cubic-bezier(0.5, 0, 0.1, 1) both;\\n            animation: text-clip 1s 0s cubic-bezier(0.5, 0, 0.1, 1) both;\\n    }\\n\\n    .titles {\\n    -webkit-animation: outer-left 1s 1s ease both;\\n            animation: outer-left 1s 1s ease both;\\n    }\\n\\n    .cla > .clainner {\\n        display: inline-block;\\n    }\\n\\n    .landscaping {\\n    display: inline-block;\\n    }\\n\\n    .bimage {\\n    grid-row: 1;\\n    grid-column: 2;\\n    margin-left: -2rem;\\n    opacity: 0.9;\\n    margin-top: 2rem;\\n    -webkit-animation: image-in 1s cubic-bezier(0.5, 0, 0.1, 1) 2s backwards;\\n            animation: image-in 1s cubic-bezier(0.5, 0, 0.1, 1) 2s backwards;\\n    }\\n\\n    @-webkit-keyframes image-in {\\n        from {\\n        -webkit-clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);\\n                clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);\\n        }\\n        to {\\n        -webkit-clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);\\n                clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);\\n        }\\n    }\\n\\n    @keyframes image-in {\\n        from {\\n        -webkit-clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);\\n                clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);\\n        }\\n        to {\\n        -webkit-clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);\\n                clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);\\n        }\\n    }\\n\\n    img {\\n        display: block;\\n        width: 100%;\\n        height: auto;\\n    }\\n    .home{\\n        margin-top: -165px;\\n    }\\n    /* .company-title{\\n      position: relative;\\n      width: 28%;\\n      transform: translate(-150%, 150%);\\n      font-size: 4rem;\\n    } */\\n    .tel{\\n      position: relative;\\n      transform: translate(-78%, 2650%);\\n    }\\n    .explore{\\n      margin-top: 250px;\\n      margin-left: -28%;\\n    }\\n}\\n\\n\\n\\n      \\n\\n  /* About Section */\\n  .about{\\n    height: auto;\\n    width: auto;\\n    position: relative;\\n    font-family: 'Epilogue', sans-serif;\\n    background: #fff;\\n    margin-top: -175px;\\n    padding-bottom: 50px;\\n  }\\n  .about-header{\\n    font-size: 3rem;\\n    text-align: left;\\n  }\\n  .about-img-container{\\n    padding: 50px;\\n    width: 80%;\\n    margin: 11rem auto;\\n    margin-bottom: 1rem;\\n  }\\n  .about-img{\\n      height: 100%;\\n      width: 100%;\\n  }\\n  .about-intro{\\n    border: 10px solid #14a76c;\\n    width: 80%;\\n    margin-right: 0 auto;\\n    border-left: none;\\n    margin: 0 auto;\\n  }\\n  .intro{\\n    padding: 1rem;\\n    font-size: 1rem;\\n    margin-bottom: 3rem;\\n  }\\n/* Media Queries for about */\\n@media screen and (min-width: 769px){\\n    .about-img-container{\\n        width: 50%;\\n    }\\n    .about-img{\\n        height: 400px;\\n        width: 260px;\\n    }\\n    .about-intro{\\n        width: 50%;\\n        margin-top: -3rem;\\n        margin-right: 5rem;\\n        z-index: 1000000;\\n        position: relative;\\n    }\\n    .about-header{\\n        margin-top: 2rem;\\n    }\\n    \\n}\\n@media screen and (min-width: 1024px){\\n    .about-img-container{\\n        width: -1%;\\n    }\\n    .about-intro{\\n        width: 45%;\\n        margin-top: -20rem;\\n    }\\n    .about-header{\\n        padding-left: 2rem;\\n    }\\n    .intro{\\n        padding: 3rem;\\n        margin-bottom: 3rem;\\n    }\\n}\\n/* Services Section */\\n.service{\\n    margin-top: -180px;\\n    height: auto;\\n    width: auto;\\n    /* background-color:#36384c; */\\n    background-color: #366355;\\n    color: #fff;\\n    margin-bottom: 140px;\\n    padding-bottom: 100px;\\n}\\n.service-header{\\n    text-align: left;\\n    font-size: 3rem;\\n    margin-top: 5rem;\\n    padding: 2rem;\\n    padding-top: 5em;\\n}\\n.service-details{\\n    padding: 2rem;\\n    font-size: 1rem;\\n    margin-top: -6rem;\\n}\\n.card{\\n    width: 95%;\\n    height: auto;\\n    /* background-color: #366355; */\\n    background-color: rgb(245, 245, 245);\\n    border-bottom: #fff 10px solid;\\n    margin: 0 auto;\\n    transition: ease .3s;\\n    margin-bottom: 5rem;\\n}\\n.card:hover{\\n    border-bottom-color: yellow;\\n    transform: translateY(-20px);\\n    transition: ease-out;\\n}\\n.number{\\n    text-align: left;\\n    padding: 1rem;\\n    color: #000;\\n}\\n.card-img-container{\\n    margin: 0 auto;\\n    background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \"); \\n    background-position: 50% 50%;\\n    background-size: cover;\\n    height:100px;\\n    width:100px;\\n    margin-top: -50px;\\n}\\n.service-title, .service-intro{\\n    text-align: center;\\n    font-weight: 200;\\n    font-family: 'Epilogue';\\n    font-size: 1.2rem;\\n    color: #000;\\n}\\n.service-intro{\\n    padding: 1rem 5rem;\\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\\n    letter-spacing: 1px;\\n    font-size: 1rem;\\n\\n}\\n#service2{\\n    background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_2___ + \");\\n    background-size: cover;\\n}\\n#service3{\\n    background: url(\" + ___CSS_LOADER_URL_REPLACEMENT_3___ + \");\\n    background-size: cover;\\n}\\n/* Media Queries Service */\\n@media screen and (min-width: 1024px){\\n    .cards{\\n        display: flex;\\n        flex-direction: row;\\n    }\\n    .card{\\n      width: 25%;  \\n    }\\n}\\n\\n/* Project Section */\\n.project{\\n    height: auto;\\n    width: auto;\\n    margin: 0 auto;\\n    /* background-color: #4B4E6A; */\\n    background-color: #e6dac3;\\n    margin-top: -142px;\\n    color: #000;\\n}\\n.projects-header{\\n    font-size: 3rem;\\n}\\n.projects-header,\\n.projects-details{\\n    padding: 2rem;\\n    padding-top: 5rem;\\n    text-align: left;\\n    \\n}\\n.projects-details{\\n    padding-top: 1rem;\\n}\\n.project-slider{\\n    position: relative;\\n    margin: auto;\\n}\\n.mySlides{\\n    display:none;\\n}\\n.prev, .next {\\n    cursor: pointer;\\n    position: absolute;\\n    top: 50%;\\n    width: auto;\\n    margin-top: -22px;\\n    padding: 16px;\\n    color: white;\\n    font-weight: bold;\\n    font-size: 18px;\\n    transition: 0.6s ease;\\n    border-radius: 0 3px 3px 0;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none;\\n  }\\n  /* Position the \\\"next button\\\" to the right */\\n.next {\\n    right: 0;\\n    border-radius: 3px 0 0 3px;\\n  }\\n  \\n  /* On hover, add a black background color with a little bit see-through */\\n  .prev:hover, .next:hover {\\n    background-color: rgba(0,0,0,0.8);\\n  }\\n  /* The dots/bullets/indicators */\\n.dot {\\n    cursor: pointer;\\n    height: 15px;\\n    width: 15px;\\n    margin: 0 2px;\\n    background-color: #bbb;\\n    border-radius: 50%;\\n    display: inline-block;\\n    transition: background-color 0.6s ease;\\n    margin-top: 15px;\\n    margin-bottom: 100px;\\n  }\\n  \\n  .active, .dot:hover {\\n    background-color: #717171;\\n  }\\n\\n  /* Fading animation */\\n.fade {\\n    -webkit-animation-name: fade;\\n    -webkit-animation-duration: 1.5s;\\n    animation-name: fade;\\n    animation-duration: 1.5s;\\n  }\\n  \\n  @-webkit-keyframes fade {\\n    from {opacity: .4}\\n    to {opacity: 1}\\n  }\\n  \\n  @keyframes fade {\\n    from {opacity: .4}\\n    to {opacity: 1}\\n  }\\n.project-div{\\n    width: 100%;\\n    height: auto;\\n    background-color: #366355;\\n}\\n.img-project{\\n    margin: 0 auto;\\n    position: relative;\\n}\\n.number-div{\\n    border-right: 5px solid #14a76c;\\n    color: #fff;\\n    position: absolute;\\n    top: 0%;\\n    left: 6%;\\n    transform: translate(-20%, 50%);\\n    background-color: #4B4E6A;\\n    width: 50px;\\n    height: 50px;\\n}\\n.project-image{\\n    height: 100%;\\n    width: 100%;\\n    padding: 2rem;\\n}\\n.projects-details{\\n    margin: 0 auto;\\n}\\n.project-name-div{\\n    height: 5rem;\\n    background-color:#14a76c;\\n    color: #fff;\\n}\\n.project-name{\\n    padding: 2rem;\\n    text-align: left;\\n}\\n.area{\\n    padding: 2rem;\\n    color: #fff;\\n}\\n\\n.project-intro{\\n    padding: 2rem;\\n    padding-bottom: 5rem;;\\n    color: #fff;\\n}\\n/* Media Queries Projects */\\n@media screen and (min-width: 980px){\\n    .project-div{\\n        width: 70%;\\n        margin: 0 auto;\\n        height: 550px;\\n        position: relative;\\n    }\\n    .img-project{\\n        width: 55%;\\n        float: left;\\n        margin-top: 50px;\\n        border-right: 5px;\\n        margin-left: -5px;\\n        z-index: 1000000;\\n    }\\n    .number-div{\\n        left: -10%;\\n        top: -6%;\\n        background-color: #3F364C;\\n    }\\n    .project-image{\\n        width: 400px;\\n        height: 450px;\\n        border-right: 5px solid #fff;\\n        padding: 0;\\n    }\\n    .projects-details{\\n        position: relative;\\n        display: flex;\\n        flex-direction: column;\\n    }\\n    .project-name-div{\\n        margin-top: 60px;\\n        margin-left: 503px;\\n    }\\n    .project-name{\\n        padding: 0;\\n        padding-left: 4rem;\\n    }\\n    .area{\\n        padding: 0;\\n        padding-bottom: 0rem;\\n        padding-left: 4rem;\\n        \\n    }\\n    .project-intro{\\n        padding-left: 4rem;\\n        color: #fff;\\n        padding-bottom: 5rem;\\n    }\\n}\\n/* Footer */\\n#footer{\\n    background: #464646;\\n    margin: 0 auto;\\n    color: #a5a5a5;\\n    margin-bottom: 40px;\\n}\\n.about-footer,\\n.footer-nav,\\n.working-hours{\\n    padding: 40px 20px;\\n}\\n.footer-nav,\\n.working-hours{\\n    padding-top: 20px;\\n    padding-bottom: 20px;\\n}\\n.footer-heading{\\n    color: #fff;\\n    font-size: 1rem;\\n}\\n.about-us-p,\\n.footer-list,\\n.workdays{\\n    font-weight: 300;\\n    width: 80%;\\n    font-size: .90rem;\\n}\\n.footer-list{\\n    list-style-type: disclosure-open;\\n    padding: 3px;\\n    cursor: pointer;\\n}\\n.footer-list a {\\n    text-decoration: none;\\n    color:#a5a5a5;\\n}\\n.footer-list a:hover{\\n    color: yellow;\\n}\\n\\n.workdays{\\n    width: 100%;\\n    list-style-type: none;\\n    padding: 5px;\\n    border-bottom: solid 2px #4B4E6A;\\n    text-align: left;\\n    margin-left:-47px;\\n}\\n.right{\\n    float: right;\\n}\\n.contact-info{\\n    background-color: #3a3535;\\n}\\n\\n.cLogo{\\n    width: 175px;\\n    display: block;\\n    margin: 10px auto;\\n    padding-top: 50px;\\n}\\n.company-name,\\n.company-number{\\n    display: block;\\n    margin: 10px auto;\\n    text-align: center;\\n    font-size: 1rem;\\n}\\n.email-contact{\\n    margin-top:35px;\\n}\\n.email-text{\\n    text-align: center;\\n    margin: 0 auto;\\n    display: block;\\n    font-size: 0.85rem;\\n}\\n\\n.emailAddress{\\n    color: #fff;\\n    text-align: center;\\n    margin: 0 auto;\\n    display: block;\\n}\\n.social{\\n    text-align: center;\\n}\\n.socialIcons{\\n    list-style-type: none;\\n    padding: 10px;\\n    display: inline-block;\\n    margin: 20px;\\n}\\n.facebook{\\n    width:32px;\\n    height: 32px;\\n}\\n/* Media Queries footer */\\n@media screen and (min-width: 980px){\\n    .top-half{\\n        display: flex;\\n        justify-content: space-between;\\n        flex-direction: row;\\n        padding-top: 100px;\\n    }\\n    .about-footer{\\n        width: 30%;\\n    }\\n    .footer-nav{\\n        width: 30%;\\n    }\\n    .working-hours{\\n        width: 30%;\\n    }\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://styles/styles.css\"],\"names\":[],\"mappings\":\"AAAA;;gBAEgB;AAChB;CACC,sBAAsB;AACvB;AACA;CACC,gBAAgB;IACb,yBAAyB;CAC5B,WAAW;AACZ;CACC,+KAA+K;;AAEhL;CACC,iBAAiB;CACjB,kCAAkC;IAC/B,sCAAsC;IACtC,SAAS;AACb;AACA;IACI,eAAe;AACnB;;;;AAIA,gBAAgB;AAChB;IACI,YAAY;;IAEZ,YAAY;IACZ,WAAW;IACX,mBAAmB;IACnB,6GAAuG;IACvG,sBAAsB;IACtB,2BAA2B;IAC3B,4BAA4B;AAChC;;AAEA;IACI,gBAAgB;IAChB,sBAAsB;IACtB,kBAAkB;AACtB;AACA;IACI,aAAa;AACjB;AACA;IACI,YAAY;IACZ,kBAAkB;IAClB,qBAAqB;IACrB,eAAe;IACf,cAAc;AAClB;AACA;IACI,mBAAmB;IACnB,cAAc;IACd,kBAAkB;IAClB,QAAQ;IACR,MAAM;EACR;;EAEA;IACE,sBAAsB;IACtB,YAAY;EACd;;EAEA;IACE,yBAAyB;IACzB,YAAY;EACd;EACA;MACI,aAAa;EACjB;EACA,iBAAiB;;EAEjB;MACI,kBAAkB;EACtB;;EAEA;MACI,kBAAkB;MAClB,QAAQ;MACR,SAAS;MACT,4CAA4C;MAC5C,iBAAiB;MACjB,kBAAkB;EACtB;;EAEA;MACI,kBAAkB;MAClB,QAAQ;MACR,SAAS;MACT,iBAAiB;MACjB,6CAA6C;MAC7C,kBAAkB;MAClB,cAAc;MACd,qBAAqB;EACzB;EACA;MACI,kBAAkB;MAClB,QAAQ;MACR,SAAS;MACT,eAAe;MACf,6CAA6C;MAC7C,kBAAkB;EACtB;EACA;IACE,sBAAsB;IACtB,mBAAmB;IACnB,mBAAmB;IACnB,YAAY;IACZ,WAAW;IACX,eAAe;EACjB;EACA;MACI,eAAe;EACnB;EACA;MACI,aAAa;EACjB;;EAEA,uBAAuB;EACvB;MACI;UACI,mBAAmB;UACnB,cAAc;MAClB;;MAEA;UACI,aAAa;MACjB;MACA;UACI,aAAa;MACjB;MACA;QACE,YAAY;QACZ,WAAW;IACf;MACE;QACE,aAAa;QACb,8BAA8B;QAC9B,mBAAmB;MACrB;MACA;UACI,oBAAoB;MACxB;MACA;UACI,aAAa;UACb,gBAAgB;MACpB;MACA;UACI,WAAW;UACX,qBAAqB;UACrB,eAAe;MACnB;MACA;UACI,aAAa;MACjB;MACA;QACE,yBAAyB;MAC3B;MACA;UACI,YAAY;UACZ,cAAc;MAClB;MACA;UACI,aAAa;UACb,8BAA8B;UAC9B,mBAAmB;UACnB,qBAAqB;UACrB,YAAY;UACZ,WAAW;UACX,mBAAmB;UACnB,WAAW;MACf;MACA;QACE,iBAAiB;QACjB,mBAAmB;QACnB,WAAW;QACX,cAAc;QACd,WAAW;QACX,UAAU;QACV,iBAAiB;MACnB;MACA;UACI,qBAAqB;MACzB;MACA;QACE;UACE,kEAA0D;kBAA1D,0DAA0D;QAC5D;QACA;UACE,0DAAkD;kBAAlD,kDAAkD;QACpD;MACF;MAPA;QACE;UACE,kEAA0D;kBAA1D,0DAA0D;QAC5D;QACA;UACE,0DAAkD;kBAAlD,kDAAkD;QACpD;MACF;;MAEA;QACE;UACE,0BAA0B;QAC5B;QACA;UACE,eAAe;QACjB;MACF;;MAPA;QACE;UACE,0BAA0B;QAC5B;QACA;UACE,eAAe;QACjB;MACF;;MAEA;QACE;UACE,2BAA2B;QAC7B;QACA;UACE,eAAe;QACjB;MACF;;MAPA;QACE;UACE,2BAA2B;QAC7B;QACA;UACE,eAAe;QACjB;MACF;MACA;;QAEE,qEAA6D;gBAA7D,6DAA6D;IACjE;;IAEA;IACA,qBAAqB;IACrB,6CAAqC;YAArC,qCAAqC;IACrC;;IAEA;IACA,qBAAqB;IACrB;yDACqD;YADrD;yDACqD;IACrD;;IAEA;IACA,oEAA4D;YAA5D,4DAA4D;IAC5D;;IAEA;IACA,6CAAqC;YAArC,qCAAqC;IACrC;;IAEA;QACI,qBAAqB;IACzB;;IAEA;IACA,qBAAqB;IACrB;;IAEA;IACA,WAAW;IACX,cAAc;IACd,kBAAkB;IAClB,YAAY;IACZ,gBAAgB;IAChB,wEAAgE;YAAhE,gEAAgE;IAChE;;IAEA;QACI;QACA,oDAA4C;gBAA5C,4CAA4C;QAC5C;QACA;QACA,0DAAkD;gBAAlD,kDAAkD;QAClD;IACJ;;IAPA;QACI;QACA,oDAA4C;gBAA5C,4CAA4C;QAC5C;QACA;QACA,0DAAkD;gBAAlD,kDAAkD;QAClD;IACJ;;IAEA;QACI,cAAc;QACd,WAAW;QACX,YAAY;IAChB;IACA;QACI,kBAAkB;IACtB;IACA;;;;;OAKG;IACH;MACE,kBAAkB;MAClB,iCAAiC;IACnC;IACA;MACE,iBAAiB;MACjB,iBAAiB;IACnB;AACJ;;;;;;EAME,kBAAkB;EAClB;IACE,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,mCAAmC;IACnC,gBAAgB;IAChB,kBAAkB;IAClB,oBAAoB;EACtB;EACA;IACE,eAAe;IACf,gBAAgB;EAClB;EACA;IACE,aAAa;IACb,UAAU;IACV,kBAAkB;IAClB,mBAAmB;EACrB;EACA;MACI,YAAY;MACZ,WAAW;EACf;EACA;IACE,0BAA0B;IAC1B,UAAU;IACV,oBAAoB;IACpB,iBAAiB;IACjB,cAAc;EAChB;EACA;IACE,aAAa;IACb,eAAe;IACf,mBAAmB;EACrB;AACF,4BAA4B;AAC5B;IACI;QACI,UAAU;IACd;IACA;QACI,aAAa;QACb,YAAY;IAChB;IACA;QACI,UAAU;QACV,iBAAiB;QACjB,kBAAkB;QAClB,gBAAgB;QAChB,kBAAkB;IACtB;IACA;QACI,gBAAgB;IACpB;;AAEJ;AACA;IACI;QACI,UAAU;IACd;IACA;QACI,UAAU;QACV,kBAAkB;IACtB;IACA;QACI,kBAAkB;IACtB;IACA;QACI,aAAa;QACb,mBAAmB;IACvB;AACJ;AACA,qBAAqB;AACrB;IACI,kBAAkB;IAClB,YAAY;IACZ,WAAW;IACX,8BAA8B;IAC9B,yBAAyB;IACzB,WAAW;IACX,oBAAoB;IACpB,qBAAqB;AACzB;AACA;IACI,gBAAgB;IAChB,eAAe;IACf,gBAAgB;IAChB,aAAa;IACb,gBAAgB;AACpB;AACA;IACI,aAAa;IACb,eAAe;IACf,iBAAiB;AACrB;AACA;IACI,UAAU;IACV,YAAY;IACZ,+BAA+B;IAC/B,oCAAoC;IACpC,8BAA8B;IAC9B,cAAc;IACd,oBAAoB;IACpB,mBAAmB;AACvB;AACA;IACI,2BAA2B;IAC3B,4BAA4B;IAC5B,oBAAoB;AACxB;AACA;IACI,gBAAgB;IAChB,aAAa;IACb,WAAW;AACf;AACA;IACI,cAAc;IACd,mDAA8C;IAC9C,4BAA4B;IAC5B,sBAAsB;IACtB,YAAY;IACZ,WAAW;IACX,iBAAiB;AACrB;AACA;IACI,kBAAkB;IAClB,gBAAgB;IAChB,uBAAuB;IACvB,iBAAiB;IACjB,WAAW;AACf;AACA;IACI,kBAAkB;IAClB,6EAA6E;IAC7E,mBAAmB;IACnB,eAAe;;AAEnB;AACA;IACI,mDAAgD;IAChD,sBAAsB;AAC1B;AACA;IACI,mDAA8C;IAC9C,sBAAsB;AAC1B;AACA,0BAA0B;AAC1B;IACI;QACI,aAAa;QACb,mBAAmB;IACvB;IACA;MACE,UAAU;IACZ;AACJ;;AAEA,oBAAoB;AACpB;IACI,YAAY;IACZ,WAAW;IACX,cAAc;IACd,+BAA+B;IAC/B,yBAAyB;IACzB,kBAAkB;IAClB,WAAW;AACf;AACA;IACI,eAAe;AACnB;AACA;;IAEI,aAAa;IACb,iBAAiB;IACjB,gBAAgB;;AAEpB;AACA;IACI,iBAAiB;AACrB;AACA;IACI,kBAAkB;IAClB,YAAY;AAChB;AACA;IACI,YAAY;AAChB;AACA;IACI,eAAe;IACf,kBAAkB;IAClB,QAAQ;IACR,WAAW;IACX,iBAAiB;IACjB,aAAa;IACb,YAAY;IACZ,iBAAiB;IACjB,eAAe;IACf,qBAAqB;IACrB,0BAA0B;IAC1B,yBAAiB;OAAjB,sBAAiB;QAAjB,qBAAiB;YAAjB,iBAAiB;EACnB;EACA,4CAA4C;AAC9C;IACI,QAAQ;IACR,0BAA0B;EAC5B;;EAEA,yEAAyE;EACzE;IACE,iCAAiC;EACnC;EACA,gCAAgC;AAClC;IACI,eAAe;IACf,YAAY;IACZ,WAAW;IACX,aAAa;IACb,sBAAsB;IACtB,kBAAkB;IAClB,qBAAqB;IACrB,sCAAsC;IACtC,gBAAgB;IAChB,oBAAoB;EACtB;;EAEA;IACE,yBAAyB;EAC3B;;EAEA,qBAAqB;AACvB;IACI,4BAA4B;IAC5B,gCAAgC;IAChC,oBAAoB;IACpB,wBAAwB;EAC1B;;EAEA;IACE,MAAM,WAAW;IACjB,IAAI,UAAU;EAChB;;EAEA;IACE,MAAM,WAAW;IACjB,IAAI,UAAU;EAChB;AACF;IACI,WAAW;IACX,YAAY;IACZ,yBAAyB;AAC7B;AACA;IACI,cAAc;IACd,kBAAkB;AACtB;AACA;IACI,+BAA+B;IAC/B,WAAW;IACX,kBAAkB;IAClB,OAAO;IACP,QAAQ;IACR,+BAA+B;IAC/B,yBAAyB;IACzB,WAAW;IACX,YAAY;AAChB;AACA;IACI,YAAY;IACZ,WAAW;IACX,aAAa;AACjB;AACA;IACI,cAAc;AAClB;AACA;IACI,YAAY;IACZ,wBAAwB;IACxB,WAAW;AACf;AACA;IACI,aAAa;IACb,gBAAgB;AACpB;AACA;IACI,aAAa;IACb,WAAW;AACf;;AAEA;IACI,aAAa;IACb,oBAAoB;IACpB,WAAW;AACf;AACA,2BAA2B;AAC3B;IACI;QACI,UAAU;QACV,cAAc;QACd,aAAa;QACb,kBAAkB;IACtB;IACA;QACI,UAAU;QACV,WAAW;QACX,gBAAgB;QAChB,iBAAiB;QACjB,iBAAiB;QACjB,gBAAgB;IACpB;IACA;QACI,UAAU;QACV,QAAQ;QACR,yBAAyB;IAC7B;IACA;QACI,YAAY;QACZ,aAAa;QACb,4BAA4B;QAC5B,UAAU;IACd;IACA;QACI,kBAAkB;QAClB,aAAa;QACb,sBAAsB;IAC1B;IACA;QACI,gBAAgB;QAChB,kBAAkB;IACtB;IACA;QACI,UAAU;QACV,kBAAkB;IACtB;IACA;QACI,UAAU;QACV,oBAAoB;QACpB,kBAAkB;;IAEtB;IACA;QACI,kBAAkB;QAClB,WAAW;QACX,oBAAoB;IACxB;AACJ;AACA,WAAW;AACX;IACI,mBAAmB;IACnB,cAAc;IACd,cAAc;IACd,mBAAmB;AACvB;AACA;;;IAGI,kBAAkB;AACtB;AACA;;IAEI,iBAAiB;IACjB,oBAAoB;AACxB;AACA;IACI,WAAW;IACX,eAAe;AACnB;AACA;;;IAGI,gBAAgB;IAChB,UAAU;IACV,iBAAiB;AACrB;AACA;IACI,gCAAgC;IAChC,YAAY;IACZ,eAAe;AACnB;AACA;IACI,qBAAqB;IACrB,aAAa;AACjB;AACA;IACI,aAAa;AACjB;;AAEA;IACI,WAAW;IACX,qBAAqB;IACrB,YAAY;IACZ,gCAAgC;IAChC,gBAAgB;IAChB,iBAAiB;AACrB;AACA;IACI,YAAY;AAChB;AACA;IACI,yBAAyB;AAC7B;;AAEA;IACI,YAAY;IACZ,cAAc;IACd,iBAAiB;IACjB,iBAAiB;AACrB;AACA;;IAEI,cAAc;IACd,iBAAiB;IACjB,kBAAkB;IAClB,eAAe;AACnB;AACA;IACI,eAAe;AACnB;AACA;IACI,kBAAkB;IAClB,cAAc;IACd,cAAc;IACd,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,cAAc;IACd,cAAc;AAClB;AACA;IACI,kBAAkB;AACtB;AACA;IACI,qBAAqB;IACrB,aAAa;IACb,qBAAqB;IACrB,YAAY;AAChB;AACA;IACI,UAAU;IACV,YAAY;AAChB;AACA,yBAAyB;AACzB;IACI;QACI,aAAa;QACb,8BAA8B;QAC9B,mBAAmB;QACnB,kBAAkB;IACtB;IACA;QACI,UAAU;IACd;IACA;QACI,UAAU;IACd;IACA;QACI,UAAU;IACd;AACJ\",\"sourcesContent\":[\"/* ------------\\nGlobal Elements\\n---------------*/\\n* { \\n\\tbox-sizing: border-box;\\n}\\nhtml, body {\\n\\tmin-height: 100%;\\n    background-color: #3a3535;\\n\\tcolor: #000;\\n}\\n\\t/* sets the body height of the browser, so that backgrounds and div heights work correctly. Color and background will almost certainly be altered; they are just placeholders */\\n\\t\\nbody {\\n\\tfont-size: 1.4rem;\\n\\ttext-rendering: optimizeLegibility;\\n    font-family: 'Encode Sans', sans-serif;\\n    margin: 0;\\n}\\np{\\n    font-size: 1rem;\\n}\\n\\t\\n\\t\\n\\n/* Mobile Menu */\\n.mobile-container{\\n    margin: auto;\\n    \\n    height:700px;\\n    color: #fff;\\n    border-radius: 10px;\\n    background-image: linear-gradient(rgba(0,0,0 ,0.3) ,rgba(0,0,0,0.3)), url('../public/images/lawn.jpeg');\\n    background-size: cover;\\n    background-position: center;\\n    background-repeat: no-repeat;\\n}\\n\\n.topnav{\\n    overflow: hidden;\\n    background-color: #333;\\n    position: relative;\\n}\\n.topnav #menuItems{\\n    display: none;\\n}\\n.topnav a{\\n    color: white;\\n    padding: 14px 16px;\\n    text-decoration: none;\\n    font-size: 17px;\\n    display: block;\\n}\\n.topnav a.icon {\\n    background: #14a76c;\\n    display: block;\\n    position: absolute;\\n    right: 0;\\n    top: 0;\\n  }\\n  \\n  .topnav a:hover {\\n    background-color: #ddd;\\n    color: black;\\n  }\\n\\n  .active {\\n    background-color: #14a76c;\\n    color: white;\\n  }\\n  .desktop-nav{\\n      display: none;\\n  }\\n  /* Home Section */\\n\\n  .home{\\n      position: relative;\\n  }\\n\\n  .company-title{\\n      position: absolute;\\n      top: 50%;\\n      left: 50%;\\n      transform: translateX(-50%) translateY(75%) ;\\n      font-size: 3.5rem;\\n      text-align: center;\\n  }\\n\\n  .tel{\\n      position: absolute;\\n      top: 50%;\\n      left: 50%;\\n      font-size: 1.4rem;\\n      transform: translateX(-50%) translateY(1025%);\\n      text-align: center;\\n      color: inherit;\\n      text-decoration: none;\\n  }\\n  .explore{\\n      position: absolute;\\n      top: 50%;\\n      left: 50%;\\n      font-size: 2rem;\\n      transform: translateX(-50%) translateY(1080%);\\n      text-align: center;\\n  }\\n  .explored{\\n    padding: 0.8rem 2.6rem;\\n    border-radius: 1rem;\\n    background: #14a76c;\\n    border: none;\\n    color: #fff;\\n    font-size: 1rem;\\n  }\\n  .explored:hover{\\n      cursor: pointer;\\n  }\\n  #app{\\n      display: none;\\n  }\\n\\n  /* Media Queries Home */\\n  @media screen and (min-width: 980px){\\n      .mobile-container{\\n          background: #366355;\\n          height: 1000px;\\n      }\\n     \\n      .company-title{\\n          display: none;\\n      }\\n      .topnav{\\n          display: none;\\n      }\\n      .iconic{\\n        height: auto;\\n        width:100px;\\n    }\\n      .desktop-nav{\\n        display: flex;\\n        justify-content: space-between;\\n        flex-direction: row;\\n      }\\n      .nav-menu{\\n          display: inline-flex;\\n      }\\n      .desktop-items{\\n          padding: 20px;\\n          list-style: none;\\n      }\\n      .desktop-items a{\\n          color: #fff;\\n          text-decoration: none;\\n          cursor: pointer;\\n      }\\n      .desktop-items a:hover{\\n          color: yellow;\\n      }\\n      .active{\\n        background-color: inherit;\\n      }\\n      #app{\\n          z-index: 100;\\n          display: block;\\n      }\\n      #app{\\n          display: grid;\\n          grid-template-columns: 1fr 2fr;\\n          align-items: center;\\n          padding-bottom: 4vmin;\\n          height: 90vh;\\n          width: 100%;\\n          background: inherit;\\n          color: #fff;\\n      }\\n      .titles{\\n        padding-left: 1em;\\n        grid-column: 1 / -1;\\n        grid-row: 1; \\n        font-size: 7vw;\\n        width: 100%;\\n        z-index: 2;\\n        margin-top: 300px;\\n      }\\n      .titles > .titles-inner{\\n          display: inline-block;\\n      }\\n      @keyframes text-clip {\\n        from {\\n          clip-path: polygon(0% 100%, 100% 100%, 100% 100%, 0% 100%);\\n        }\\n        to {\\n          clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);\\n        }\\n      }\\n      \\n      @keyframes outer-left {\\n        from {\\n          transform: translateX(50%);\\n        }\\n        to {\\n          transform: none;\\n        }\\n      }\\n      \\n      @keyframes inner-left {\\n        from {\\n          transform: translateX(-50%);\\n        }\\n        to {\\n          transform: none;\\n        }\\n      }\\n      .cla,\\n      .landscaping{\\n        animation: outer-left 1s 1s cubic-bezier(0.5, 0, 0.1, 1) both;\\n    }\\n\\n    .titles-inner {\\n    display: inline-block;\\n    animation: inner-left 1s 1s ease both;\\n    }\\n\\n    .clainner {\\n    display: inline-block;\\n    animation: inner-left 1s 1s ease both,\\n        text-clip 1s 0s cubic-bezier(0.5, 0, 0.1, 1) both;\\n    }\\n\\n    .landscapinginner {\\n    animation: text-clip 1s 0s cubic-bezier(0.5, 0, 0.1, 1) both;\\n    }\\n\\n    .titles {\\n    animation: outer-left 1s 1s ease both;\\n    }\\n\\n    .cla > .clainner {\\n        display: inline-block;\\n    }\\n\\n    .landscaping {\\n    display: inline-block;\\n    }\\n\\n    .bimage {\\n    grid-row: 1;\\n    grid-column: 2;\\n    margin-left: -2rem;\\n    opacity: 0.9;\\n    margin-top: 2rem;\\n    animation: image-in 1s cubic-bezier(0.5, 0, 0.1, 1) 2s backwards;\\n    }\\n\\n    @keyframes image-in {\\n        from {\\n        clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);\\n        }\\n        to {\\n        clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);\\n        }\\n    }\\n\\n    img {\\n        display: block;\\n        width: 100%;\\n        height: auto;\\n    }\\n    .home{\\n        margin-top: -165px;\\n    }\\n    /* .company-title{\\n      position: relative;\\n      width: 28%;\\n      transform: translate(-150%, 150%);\\n      font-size: 4rem;\\n    } */\\n    .tel{\\n      position: relative;\\n      transform: translate(-78%, 2650%);\\n    }\\n    .explore{\\n      margin-top: 250px;\\n      margin-left: -28%;\\n    }\\n}\\n\\n\\n\\n      \\n\\n  /* About Section */\\n  .about{\\n    height: auto;\\n    width: auto;\\n    position: relative;\\n    font-family: 'Epilogue', sans-serif;\\n    background: #fff;\\n    margin-top: -175px;\\n    padding-bottom: 50px;\\n  }\\n  .about-header{\\n    font-size: 3rem;\\n    text-align: left;\\n  }\\n  .about-img-container{\\n    padding: 50px;\\n    width: 80%;\\n    margin: 11rem auto;\\n    margin-bottom: 1rem;\\n  }\\n  .about-img{\\n      height: 100%;\\n      width: 100%;\\n  }\\n  .about-intro{\\n    border: 10px solid #14a76c;\\n    width: 80%;\\n    margin-right: 0 auto;\\n    border-left: none;\\n    margin: 0 auto;\\n  }\\n  .intro{\\n    padding: 1rem;\\n    font-size: 1rem;\\n    margin-bottom: 3rem;\\n  }\\n/* Media Queries for about */\\n@media screen and (min-width: 769px){\\n    .about-img-container{\\n        width: 50%;\\n    }\\n    .about-img{\\n        height: 400px;\\n        width: 260px;\\n    }\\n    .about-intro{\\n        width: 50%;\\n        margin-top: -3rem;\\n        margin-right: 5rem;\\n        z-index: 1000000;\\n        position: relative;\\n    }\\n    .about-header{\\n        margin-top: 2rem;\\n    }\\n    \\n}\\n@media screen and (min-width: 1024px){\\n    .about-img-container{\\n        width: -1%;\\n    }\\n    .about-intro{\\n        width: 45%;\\n        margin-top: -20rem;\\n    }\\n    .about-header{\\n        padding-left: 2rem;\\n    }\\n    .intro{\\n        padding: 3rem;\\n        margin-bottom: 3rem;\\n    }\\n}\\n/* Services Section */\\n.service{\\n    margin-top: -180px;\\n    height: auto;\\n    width: auto;\\n    /* background-color:#36384c; */\\n    background-color: #366355;\\n    color: #fff;\\n    margin-bottom: 140px;\\n    padding-bottom: 100px;\\n}\\n.service-header{\\n    text-align: left;\\n    font-size: 3rem;\\n    margin-top: 5rem;\\n    padding: 2rem;\\n    padding-top: 5em;\\n}\\n.service-details{\\n    padding: 2rem;\\n    font-size: 1rem;\\n    margin-top: -6rem;\\n}\\n.card{\\n    width: 95%;\\n    height: auto;\\n    /* background-color: #366355; */\\n    background-color: rgb(245, 245, 245);\\n    border-bottom: #fff 10px solid;\\n    margin: 0 auto;\\n    transition: ease .3s;\\n    margin-bottom: 5rem;\\n}\\n.card:hover{\\n    border-bottom-color: yellow;\\n    transform: translateY(-20px);\\n    transition: ease-out;\\n}\\n.number{\\n    text-align: left;\\n    padding: 1rem;\\n    color: #000;\\n}\\n.card-img-container{\\n    margin: 0 auto;\\n    background: url('../public/images/mowing.png'); \\n    background-position: 50% 50%;\\n    background-size: cover;\\n    height:100px;\\n    width:100px;\\n    margin-top: -50px;\\n}\\n.service-title, .service-intro{\\n    text-align: center;\\n    font-weight: 200;\\n    font-family: 'Epilogue';\\n    font-size: 1.2rem;\\n    color: #000;\\n}\\n.service-intro{\\n    padding: 1rem 5rem;\\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\\n    letter-spacing: 1px;\\n    font-size: 1rem;\\n\\n}\\n#service2{\\n    background: url('../public/images/planting.png');\\n    background-size: cover;\\n}\\n#service3{\\n    background: url('../public/images/digger.png');\\n    background-size: cover;\\n}\\n/* Media Queries Service */\\n@media screen and (min-width: 1024px){\\n    .cards{\\n        display: flex;\\n        flex-direction: row;\\n    }\\n    .card{\\n      width: 25%;  \\n    }\\n}\\n\\n/* Project Section */\\n.project{\\n    height: auto;\\n    width: auto;\\n    margin: 0 auto;\\n    /* background-color: #4B4E6A; */\\n    background-color: #e6dac3;\\n    margin-top: -142px;\\n    color: #000;\\n}\\n.projects-header{\\n    font-size: 3rem;\\n}\\n.projects-header,\\n.projects-details{\\n    padding: 2rem;\\n    padding-top: 5rem;\\n    text-align: left;\\n    \\n}\\n.projects-details{\\n    padding-top: 1rem;\\n}\\n.project-slider{\\n    position: relative;\\n    margin: auto;\\n}\\n.mySlides{\\n    display:none;\\n}\\n.prev, .next {\\n    cursor: pointer;\\n    position: absolute;\\n    top: 50%;\\n    width: auto;\\n    margin-top: -22px;\\n    padding: 16px;\\n    color: white;\\n    font-weight: bold;\\n    font-size: 18px;\\n    transition: 0.6s ease;\\n    border-radius: 0 3px 3px 0;\\n    user-select: none;\\n  }\\n  /* Position the \\\"next button\\\" to the right */\\n.next {\\n    right: 0;\\n    border-radius: 3px 0 0 3px;\\n  }\\n  \\n  /* On hover, add a black background color with a little bit see-through */\\n  .prev:hover, .next:hover {\\n    background-color: rgba(0,0,0,0.8);\\n  }\\n  /* The dots/bullets/indicators */\\n.dot {\\n    cursor: pointer;\\n    height: 15px;\\n    width: 15px;\\n    margin: 0 2px;\\n    background-color: #bbb;\\n    border-radius: 50%;\\n    display: inline-block;\\n    transition: background-color 0.6s ease;\\n    margin-top: 15px;\\n    margin-bottom: 100px;\\n  }\\n  \\n  .active, .dot:hover {\\n    background-color: #717171;\\n  }\\n\\n  /* Fading animation */\\n.fade {\\n    -webkit-animation-name: fade;\\n    -webkit-animation-duration: 1.5s;\\n    animation-name: fade;\\n    animation-duration: 1.5s;\\n  }\\n  \\n  @-webkit-keyframes fade {\\n    from {opacity: .4}\\n    to {opacity: 1}\\n  }\\n  \\n  @keyframes fade {\\n    from {opacity: .4}\\n    to {opacity: 1}\\n  }\\n.project-div{\\n    width: 100%;\\n    height: auto;\\n    background-color: #366355;\\n}\\n.img-project{\\n    margin: 0 auto;\\n    position: relative;\\n}\\n.number-div{\\n    border-right: 5px solid #14a76c;\\n    color: #fff;\\n    position: absolute;\\n    top: 0%;\\n    left: 6%;\\n    transform: translate(-20%, 50%);\\n    background-color: #4B4E6A;\\n    width: 50px;\\n    height: 50px;\\n}\\n.project-image{\\n    height: 100%;\\n    width: 100%;\\n    padding: 2rem;\\n}\\n.projects-details{\\n    margin: 0 auto;\\n}\\n.project-name-div{\\n    height: 5rem;\\n    background-color:#14a76c;\\n    color: #fff;\\n}\\n.project-name{\\n    padding: 2rem;\\n    text-align: left;\\n}\\n.area{\\n    padding: 2rem;\\n    color: #fff;\\n}\\n\\n.project-intro{\\n    padding: 2rem;\\n    padding-bottom: 5rem;;\\n    color: #fff;\\n}\\n/* Media Queries Projects */\\n@media screen and (min-width: 980px){\\n    .project-div{\\n        width: 70%;\\n        margin: 0 auto;\\n        height: 550px;\\n        position: relative;\\n    }\\n    .img-project{\\n        width: 55%;\\n        float: left;\\n        margin-top: 50px;\\n        border-right: 5px;\\n        margin-left: -5px;\\n        z-index: 1000000;\\n    }\\n    .number-div{\\n        left: -10%;\\n        top: -6%;\\n        background-color: #3F364C;\\n    }\\n    .project-image{\\n        width: 400px;\\n        height: 450px;\\n        border-right: 5px solid #fff;\\n        padding: 0;\\n    }\\n    .projects-details{\\n        position: relative;\\n        display: flex;\\n        flex-direction: column;\\n    }\\n    .project-name-div{\\n        margin-top: 60px;\\n        margin-left: 503px;\\n    }\\n    .project-name{\\n        padding: 0;\\n        padding-left: 4rem;\\n    }\\n    .area{\\n        padding: 0;\\n        padding-bottom: 0rem;\\n        padding-left: 4rem;\\n        \\n    }\\n    .project-intro{\\n        padding-left: 4rem;\\n        color: #fff;\\n        padding-bottom: 5rem;\\n    }\\n}\\n/* Footer */\\n#footer{\\n    background: #464646;\\n    margin: 0 auto;\\n    color: #a5a5a5;\\n    margin-bottom: 40px;\\n}\\n.about-footer,\\n.footer-nav,\\n.working-hours{\\n    padding: 40px 20px;\\n}\\n.footer-nav,\\n.working-hours{\\n    padding-top: 20px;\\n    padding-bottom: 20px;\\n}\\n.footer-heading{\\n    color: #fff;\\n    font-size: 1rem;\\n}\\n.about-us-p,\\n.footer-list,\\n.workdays{\\n    font-weight: 300;\\n    width: 80%;\\n    font-size: .90rem;\\n}\\n.footer-list{\\n    list-style-type: disclosure-open;\\n    padding: 3px;\\n    cursor: pointer;\\n}\\n.footer-list a {\\n    text-decoration: none;\\n    color:#a5a5a5;\\n}\\n.footer-list a:hover{\\n    color: yellow;\\n}\\n\\n.workdays{\\n    width: 100%;\\n    list-style-type: none;\\n    padding: 5px;\\n    border-bottom: solid 2px #4B4E6A;\\n    text-align: left;\\n    margin-left:-47px;\\n}\\n.right{\\n    float: right;\\n}\\n.contact-info{\\n    background-color: #3a3535;\\n}\\n\\n.cLogo{\\n    width: 175px;\\n    display: block;\\n    margin: 10px auto;\\n    padding-top: 50px;\\n}\\n.company-name,\\n.company-number{\\n    display: block;\\n    margin: 10px auto;\\n    text-align: center;\\n    font-size: 1rem;\\n}\\n.email-contact{\\n    margin-top:35px;\\n}\\n.email-text{\\n    text-align: center;\\n    margin: 0 auto;\\n    display: block;\\n    font-size: 0.85rem;\\n}\\n\\n.emailAddress{\\n    color: #fff;\\n    text-align: center;\\n    margin: 0 auto;\\n    display: block;\\n}\\n.social{\\n    text-align: center;\\n}\\n.socialIcons{\\n    list-style-type: none;\\n    padding: 10px;\\n    display: inline-block;\\n    margin: 20px;\\n}\\n.facebook{\\n    width:32px;\\n    height: 32px;\\n}\\n/* Media Queries footer */\\n@media screen and (min-width: 980px){\\n    .top-half{\\n        display: flex;\\n        justify-content: space-between;\\n        flex-direction: row;\\n        padding-top: 100px;\\n    }\\n    .about-footer{\\n        width: 30%;\\n    }\\n    .footer-nav{\\n        width: 30%;\\n    }\\n    .working-hours{\\n        width: 30%;\\n    }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[2]!./styles/styles.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js ***!
  \************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/ // css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function(useSourceMap) {\n    var list = [] // return the list of modules as css string\n    ;\n    list.toString = function toString() {\n        return this.map(function(item) {\n            var content = cssWithMappingToString(item, useSourceMap);\n            if (item[2]) {\n                return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n            }\n            return content;\n        }).join(\"\");\n    } // import a list of modules into the list\n    ;\n    // eslint-disable-next-line func-names\n    list.i = function(modules, mediaQuery, dedupe) {\n        if (typeof modules === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            modules = [\n                [\n                    null,\n                    modules,\n                    \"\"\n                ]\n            ];\n        }\n        var alreadyImportedModules = {};\n        if (dedupe) {\n            for(var i = 0; i < this.length; i++){\n                // eslint-disable-next-line prefer-destructuring\n                var id = this[i][0];\n                if (id != null) {\n                    alreadyImportedModules[id] = true;\n                }\n            }\n        }\n        for(var _i = 0; _i < modules.length; _i++){\n            var item = [].concat(modules[_i]);\n            if (dedupe && alreadyImportedModules[item[0]]) {\n                continue;\n            }\n            if (mediaQuery) {\n                if (!item[2]) {\n                    item[2] = mediaQuery;\n                } else {\n                    item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n                }\n            }\n            list.push(item);\n        }\n    };\n    return list;\n};\nfunction cssWithMappingToString(item, useSourceMap) {\n    var content = item[1] || \"\" // eslint-disable-next-line prefer-destructuring\n    ;\n    var cssMapping = item[3];\n    if (!cssMapping) {\n        return content;\n    }\n    if (useSourceMap && typeof btoa === \"function\") {\n        var sourceMapping = toComment(cssMapping);\n        var sourceURLs = cssMapping.sources.map(function(source) {\n            return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n        });\n        return [\n            content\n        ].concat(sourceURLs).concat([\n            sourceMapping\n        ]).join(\"\\n\");\n    }\n    return [\n        content\n    ].join(\"\\n\");\n} // Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    return \"/*# \".concat(data, \" */\");\n}\n\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxxQkFBcUI7QUFDekU7QUFDQTtBQUNBLFNBQVM7QUFDVCxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGlCQUFpQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixxQkFBcUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanM/Y2E0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovIC8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgbGlzdCA9IFtdIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgICA7XG4gICAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG4gICAgICAgICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICAgIH0pLmpvaW4oXCJcIik7XG4gICAgfSAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAgIDtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICAgIGxpc3QuaSA9IGZ1bmN0aW9uKG1vZHVsZXMsIG1lZGlhUXVlcnksIGRlZHVwZSkge1xuICAgICAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgICAgICAgbW9kdWxlcyA9IFtcbiAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgICAgIG1vZHVsZXMsXG4gICAgICAgICAgICAgICAgICAgIFwiXCJcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICBdO1xuICAgICAgICB9XG4gICAgICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgICAgIGlmIChkZWR1cGUpIHtcbiAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgICAgICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuICAgICAgICAgICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspe1xuICAgICAgICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfaV0pO1xuICAgICAgICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICAgICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBpdGVtWzJdID0gXCJcIi5jb25jYXQobWVkaWFRdWVyeSwgXCIgYW5kIFwiKS5jb25jYXQoaXRlbVsyXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4gbGlzdDtcbn07XG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuICAgIHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCBcIlwiIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgIDtcbiAgICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG4gICAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH1cbiAgICBpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbihzb3VyY2UpIHtcbiAgICAgICAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBjb250ZW50XG4gICAgICAgIF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbXG4gICAgICAgICAgICBzb3VyY2VNYXBwaW5nXG4gICAgICAgIF0pLmpvaW4oXCJcXG5cIik7XG4gICAgfVxuICAgIHJldHVybiBbXG4gICAgICAgIGNvbnRlbnRcbiAgICBdLmpvaW4oXCJcXG5cIik7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/getUrl.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/getUrl.js ***!
  \***************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nmodule.exports = function(url, options) {\n    if (!options) {\n        // eslint-disable-next-line no-param-reassign\n        options = {};\n    } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n    url = url && url.__esModule ? url.default : url;\n    if (typeof url !== \"string\") {\n        return url;\n    } // If url is already wrapped in quotes, remove them\n    if (/^['\"].*['\"]$/.test(url)) {\n        // eslint-disable-next-line no-param-reassign\n        url = url.slice(1, -1);\n    }\n    if (options.hash) {\n        // eslint-disable-next-line no-param-reassign\n        url += options.hash;\n    } // Should url be wrapped?\n    // See https://drafts.csswg.org/css-values-3/#urls\n    if (/[\"'() \\t\\n]/.test(url) || options.needQuotes) {\n        return '\"'.concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), '\"');\n    }\n    return url;\n};\n\n//# sourceMappingURL=getUrl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2dldFVybC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9nZXRVcmwuanM/MGU3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXJsLCBvcHRpb25zKSB7XG4gICAgaWYgKCFvcHRpb25zKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgICBvcHRpb25zID0ge307XG4gICAgfSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZXJzY29yZS1kYW5nbGUsIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgdXJsID0gdXJsICYmIHVybC5fX2VzTW9kdWxlID8gdXJsLmRlZmF1bHQgOiB1cmw7XG4gICAgaWYgKHR5cGVvZiB1cmwgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcmV0dXJuIHVybDtcbiAgICB9IC8vIElmIHVybCBpcyBhbHJlYWR5IHdyYXBwZWQgaW4gcXVvdGVzLCByZW1vdmUgdGhlbVxuICAgIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgICAgdXJsID0gdXJsLnNsaWNlKDEsIC0xKTtcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgICAgdXJsICs9IG9wdGlvbnMuaGFzaDtcbiAgICB9IC8vIFNob3VsZCB1cmwgYmUgd3JhcHBlZD9cbiAgICAvLyBTZWUgaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy12YWx1ZXMtMy8jdXJsc1xuICAgIGlmICgvW1wiJygpIFxcdFxcbl0vLnRlc3QodXJsKSB8fCBvcHRpb25zLm5lZWRRdW90ZXMpIHtcbiAgICAgICAgcmV0dXJuICdcIicuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIiksICdcIicpO1xuICAgIH1cbiAgICByZXR1cm4gdXJsO1xufTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0VXJsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/getUrl.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app! ***!
  \*******************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfYXBwJnBhZ2U9JTJGX2FwcCEuanMiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxnREFBeUI7QUFDaEQ7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzY3ODIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9fYXBwXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL19hcHBcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!\n"));

/***/ }),

/***/ "./styles/styles.css":
/*!***************************!*\
  !*** ./styles/styles.css ***!
  \***************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[2]!./styles.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[2]!./styles/styles.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // By default, style-loader injects CSS into the bottom\n                    // of <head>. This causes ordering problems between dev\n                    // and prod. To fix this, we render a <noscript> tag as\n                    // an anchor for the styles to be placed before. These\n                    // styles will be applied _before_ <style jsx global>.\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[2]!./styles.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[2]!./styles/styles.css\",\n      function () {\n        content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[2]!./styles.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[8].use[2]!./styles/styles.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMvc3R5bGVzLmNzcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxVQUFVLG1CQUFPLENBQUMsb05BQXdHO0FBQzFILDBCQUEwQixtQkFBTyxDQUFDLHFlQUE4Tzs7QUFFaFI7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7OztBQUdBLElBQUksSUFBVTtBQUNkLHlCQUF5QixVQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLGlCQUFpQjtBQUNyQixNQUFNLHFlQUE4TztBQUNwUDtBQUNBLGtCQUFrQixtQkFBTyxDQUFDLHFlQUE4Tzs7QUFFeFE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsZ0JBQWdCLFVBQVU7O0FBRTFCO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsRUFBRSxVQUFVO0FBQ1o7QUFDQSxHQUFHO0FBQ0g7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3R5bGVzL3N0eWxlcy5jc3M/NDFmNyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXN0eWxlLWxvYWRlci9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbOF0udXNlWzFdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls4XS51c2VbMl0hLi9zdHlsZXMuY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICAgICAgICAgICAgICAgICAgICAvLyBCeSBkZWZhdWx0LCBzdHlsZS1sb2FkZXIgaW5qZWN0cyBDU1MgaW50byB0aGUgYm90dG9tXG4gICAgICAgICAgICAgICAgICAgIC8vIG9mIDxoZWFkPi4gVGhpcyBjYXVzZXMgb3JkZXJpbmcgcHJvYmxlbXMgYmV0d2VlbiBkZXZcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5kIHByb2QuIFRvIGZpeCB0aGlzLCB3ZSByZW5kZXIgYSA8bm9zY3JpcHQ+IHRhZyBhc1xuICAgICAgICAgICAgICAgICAgICAvLyBhbiBhbmNob3IgZm9yIHRoZSBzdHlsZXMgdG8gYmUgcGxhY2VkIGJlZm9yZS4gVGhlc2VcbiAgICAgICAgICAgICAgICAgICAgLy8gc3R5bGVzIHdpbGwgYmUgYXBwbGllZCBfYmVmb3JlXyA8c3R5bGUganN4IGdsb2JhbD4uXG4gICAgICAgICAgICAgICAgICAgIC8vIFRoZXNlIGVsZW1lbnRzIHNob3VsZCBhbHdheXMgZXhpc3QuIElmIHRoZXkgZG8gbm90LFxuICAgICAgICAgICAgICAgICAgICAvLyB0aGlzIGNvZGUgc2hvdWxkIGZhaWwuXG4gICAgICAgICAgICAgICAgICAgIHZhciBhbmNob3JFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNfX25leHRfY3NzX19ET19OT1RfVVNFX19cIik7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwYXJlbnROb2RlID0gYW5jaG9yRWxlbWVudC5wYXJlbnROb2RlLy8gTm9ybWFsbHkgPGhlYWQ+XG4gICAgICAgICAgICAgICAgICAgIDtcbiAgICAgICAgICAgICAgICAgICAgLy8gRWFjaCBzdHlsZSB0YWcgc2hvdWxkIGJlIHBsYWNlZCByaWdodCBiZWZvcmUgb3VyXG4gICAgICAgICAgICAgICAgICAgIC8vIGFuY2hvci4gQnkgaW5zZXJ0aW5nIGJlZm9yZSBhbmQgbm90IGFmdGVyLCB3ZSBkbyBub3RcbiAgICAgICAgICAgICAgICAgICAgLy8gbmVlZCB0byB0cmFjayB0aGUgbGFzdCBpbnNlcnRlZCBlbGVtZW50LlxuICAgICAgICAgICAgICAgICAgICBwYXJlbnROb2RlLmluc2VydEJlZm9yZShlbGVtZW50LCBhbmNob3JFbGVtZW50KTtcbiAgICAgICAgICAgICAgICB9O1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5pZiAobW9kdWxlLmhvdCkge1xuICBpZiAoIWNvbnRlbnQubG9jYWxzIHx8IG1vZHVsZS5ob3QuaW52YWxpZGF0ZSkge1xuICAgIHZhciBpc0VxdWFsTG9jYWxzID0gZnVuY3Rpb24gaXNFcXVhbExvY2FscyhhLCBiLCBpc05hbWVkRXhwb3J0KSB7XG4gICAgaWYgKCFhICYmIGIgfHwgYSAmJiAhYikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGxldCBwO1xuICAgIGZvcihwIGluIGEpe1xuICAgICAgICBpZiAoaXNOYW1lZEV4cG9ydCAmJiBwID09PSBcImRlZmF1bHRcIikge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFbcF0gIT09IGJbcF0pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmb3IocCBpbiBiKXtcbiAgICAgICAgaWYgKGlzTmFtZWRFeHBvcnQgJiYgcCA9PT0gXCJkZWZhdWx0XCIpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICghYVtwXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufTtcbiAgICB2YXIgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcbiAgICAgIFwiISEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls4XS51c2VbMV0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzhdLnVzZVsyXSEuL3N0eWxlcy5jc3NcIixcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzhdLnVzZVsxXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbOF0udXNlWzJdIS4vc3R5bGVzLmNzc1wiKTtcblxuICAgICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKCFpc0VxdWFsTG9jYWxzKG9sZExvY2FscywgY29udGVudC5sb2NhbHMpKSB7XG4gICAgICAgICAgICAgICAgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKCk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgICAgICAgICAgICB1cGRhdGUoY29udGVudCk7XG4gICAgICB9XG4gICAgKVxuICB9XG5cbiAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkge1xuICAgIHVwZGF0ZSgpO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./styles/styles.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nconst isOldIE = function isOldIE() {\n    let memo;\n    return function memorize() {\n        if (typeof memo === \"undefined\") {\n            // Test for IE <= 9 as proposed by Browserhacks\n            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n            // Tests for existence of standard globals is to allow style-loader\n            // to operate correctly into non-standard environments\n            // @see https://github.com/webpack-contrib/style-loader/issues/177\n            memo = Boolean(window && document && document.all && !window.atob);\n        }\n        return memo;\n    };\n}();\nconst getTarget = function getTarget() {\n    const memo = {};\n    return function memorize(target) {\n        if (typeof memo[target] === \"undefined\") {\n            let styleTarget = document.querySelector(target);\n            // Special case to return head of iframe instead of iframe itself\n            if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n                try {\n                    // This will throw an exception if access to iframe is blocked\n                    // due to cross-origin restrictions\n                    styleTarget = styleTarget.contentDocument.head;\n                } catch (e) {\n                    // istanbul ignore next\n                    styleTarget = null;\n                }\n            }\n            memo[target] = styleTarget;\n        }\n        return memo[target];\n    };\n}();\nconst stylesInDom = [];\nfunction getIndexByIdentifier(identifier) {\n    let result = -1;\n    for(let i = 0; i < stylesInDom.length; i++){\n        if (stylesInDom[i].identifier === identifier) {\n            result = i;\n            break;\n        }\n    }\n    return result;\n}\nfunction modulesToDom(list, options) {\n    const idCountMap = {};\n    const identifiers = [];\n    for(let i = 0; i < list.length; i++){\n        const item = list[i];\n        const id = options.base ? item[0] + options.base : item[0];\n        const count = idCountMap[id] || 0;\n        const identifier = id + \" \" + count.toString();\n        idCountMap[id] = count + 1;\n        const index = getIndexByIdentifier(identifier);\n        const obj = {\n            css: item[1],\n            media: item[2],\n            sourceMap: item[3]\n        };\n        if (index !== -1) {\n            stylesInDom[index].references++;\n            stylesInDom[index].updater(obj);\n        } else {\n            stylesInDom.push({\n                identifier: identifier,\n                updater: addStyle(obj, options),\n                references: 1\n            });\n        }\n        identifiers.push(identifier);\n    }\n    return identifiers;\n}\nfunction insertStyleElement(options) {\n    const style = document.createElement(\"style\");\n    const attributes = options.attributes || {};\n    if (typeof attributes.nonce === \"undefined\") {\n        const nonce = // eslint-disable-next-line no-undef\n         true ? __webpack_require__.nc : 0;\n        if (nonce) {\n            attributes.nonce = nonce;\n        }\n    }\n    Object.keys(attributes).forEach(function(key) {\n        style.setAttribute(key, attributes[key]);\n    });\n    if (typeof options.insert === \"function\") {\n        options.insert(style);\n    } else {\n        const target = getTarget(options.insert || \"head\");\n        if (!target) {\n            throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n        }\n        target.appendChild(style);\n    }\n    return style;\n}\nfunction removeStyleElement(style) {\n    // istanbul ignore if\n    if (style.parentNode === null) {\n        return false;\n    }\n    style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */ const replaceText = function replaceText() {\n    const textStore = [];\n    return function replace(index, replacement) {\n        textStore[index] = replacement;\n        return textStore.filter(Boolean).join(\"\\n\");\n    };\n}();\nfunction applyToSingletonTag(style, index, remove, obj) {\n    const css = remove ? \"\" : obj.media ? \"@media \" + obj.media + \" {\" + obj.css + \"}\" : obj.css;\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = replaceText(index, css);\n    } else {\n        const cssNode = document.createTextNode(css);\n        const childNodes = style.childNodes;\n        if (childNodes[index]) {\n            style.removeChild(childNodes[index]);\n        }\n        if (childNodes.length) {\n            style.insertBefore(cssNode, childNodes[index]);\n        } else {\n            style.appendChild(cssNode);\n        }\n    }\n}\nfunction applyToTag(style, options, obj) {\n    let css = obj.css;\n    const media = obj.media;\n    const sourceMap = obj.sourceMap;\n    if (media) {\n        style.setAttribute(\"media\", media);\n    } else {\n        style.removeAttribute(\"media\");\n    }\n    if (sourceMap && typeof btoa !== \"undefined\") {\n        css += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n    }\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        while(style.firstChild){\n            style.removeChild(style.firstChild);\n        }\n        style.appendChild(document.createTextNode(css));\n    }\n}\nlet singleton = null;\nlet singletonCounter = 0;\nfunction addStyle(obj, options) {\n    let style;\n    let update;\n    let remove;\n    if (options.singleton) {\n        const styleIndex = singletonCounter++;\n        style = singleton || (singleton = insertStyleElement(options));\n        update = applyToSingletonTag.bind(null, style, styleIndex, false);\n        remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n    } else {\n        style = insertStyleElement(options);\n        update = applyToTag.bind(null, style, options);\n        remove = function() {\n            removeStyleElement(style);\n        };\n    }\n    update(obj);\n    return function updateStyle(newObj) {\n        if (newObj) {\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n                return;\n            }\n            update(obj = newObj);\n        } else {\n            remove();\n        }\n    };\n}\nmodule.exports = function(list, options) {\n    options = options || {};\n    // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n    // tags it will allow on a page\n    if (!options.singleton && typeof options.singleton !== \"boolean\") {\n        options.singleton = isOldIE();\n    }\n    list = list || [];\n    let lastIdentifiers = modulesToDom(list, options);\n    return function update(newList) {\n        newList = newList || [];\n        if (Object.prototype.toString.call(newList) !== \"[object Array]\") {\n            return;\n        }\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            stylesInDom[index].references--;\n        }\n        const newLastIdentifiers = modulesToDom(newList, options);\n        for(let i1 = 0; i1 < lastIdentifiers.length; i1++){\n            const identifier = lastIdentifiers[i1];\n            const index = getIndexByIdentifier(identifier);\n            if (stylesInDom[index].references === 0) {\n                stylesInDom[index].updater();\n                stylesInDom.splice(index, 1);\n            }\n        }\n        lastIdentifiers = newLastIdentifiers;\n    };\n};\n\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n"));

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @swc/helpers/src/_object_spread.mjs */ \"./node_modules/@swc/helpers/src/_object_spread.mjs\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_styles_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/styles.css */ \"./styles/styles.css\");\n/* harmony import */ var _styles_styles_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_styles_css__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nfunction MyApp(param) {\n    var Component = param.Component, pageProps = param.pageProps;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, (0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({}, pageProps), void 0, false, {\n        fileName: \"/Users/jack.morris/Desktop/Cla/pages/_app.js\",\n        lineNumber: 4,\n        columnNumber: 10\n    }, this);\n}\n_c = MyApp;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MyApp);\nvar _c;\n$RefreshReg$(_c, \"MyApp\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUE2QjtBQUU3QixTQUFTQSxLQUFLLENBQUMsS0FBd0IsRUFBRTtRQUF4QkMsU0FBUyxHQUFYLEtBQXdCLENBQXRCQSxTQUFTLEVBQUVDLFNBQVMsR0FBdEIsS0FBd0IsQ0FBWEEsU0FBUztJQUNuQyxxQkFBTyw4REFBQ0QsU0FBUyxxRkFBS0MsU0FBUzs7OztZQUFJO0FBQ3JDLENBQUM7QUFGUUYsS0FBQUEsS0FBSztBQUlkLCtEQUFlQSxLQUFLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3BhZ2VzL19hcHAuanM/ZTBhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXCIuLi9zdHlsZXMvc3R5bGVzLmNzc1wiXG5cbmZ1bmN0aW9uIE15QXBwKHsgQ29tcG9uZW50LCBwYWdlUHJvcHMgfSkge1xuICByZXR1cm4gPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPlxufVxuXG5leHBvcnQgZGVmYXVsdCBNeUFwcFxuIl0sIm5hbWVzIjpbIk15QXBwIiwiQ29tcG9uZW50IiwicGFnZVByb3BzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./pages/_app.js\n"));

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz81Nzc3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "./public/images/digger.png":
/*!**********************************!*\
  !*** ./public/images/digger.png ***!
  \**********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = __webpack_require__.p + "static/media/digger.4b287d7d.png";

/***/ }),

/***/ "./public/images/lawn.jpeg":
/*!*********************************!*\
  !*** ./public/images/lawn.jpeg ***!
  \*********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = __webpack_require__.p + "static/media/lawn.ed572f39.jpeg";

/***/ }),

/***/ "./public/images/mowing.png":
/*!**********************************!*\
  !*** ./public/images/mowing.png ***!
  \**********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = __webpack_require__.p + "static/media/mowing.2255cf40.png";

/***/ }),

/***/ "./public/images/planting.png":
/*!************************************!*\
  !*** ./public/images/planting.png ***!
  \************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = __webpack_require__.p + "static/media/planting.035879e2.png";

/***/ }),

/***/ "./node_modules/@swc/helpers/src/_define_property.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@swc/helpers/src/_define_property.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _defineProperty; }\n/* harmony export */ });\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9fZGVmaW5lX3Byb3BlcnR5Lm1qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9fZGVmaW5lX3Byb3BlcnR5Lm1qcz8xN2MzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHtcbiAgaWYgKGtleSBpbiBvYmopIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIG9ialtrZXldID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/src/_define_property.mjs\n"));

/***/ }),

/***/ "./node_modules/@swc/helpers/src/_object_spread.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/@swc/helpers/src/_object_spread.mjs ***!
  \**********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _objectSpread; }\n/* harmony export */ });\n/* harmony import */ var _define_property_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_define_property.mjs */ \"./node_modules/@swc/helpers/src/_define_property.mjs\");\n\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      (0,_define_property_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(target, key, source[key]);\n    });\n  }\n\n  return target;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9fb2JqZWN0X3NwcmVhZC5tanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0Q7O0FBRXJDO0FBQ2Ysa0JBQWtCLHNCQUFzQjtBQUN4QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBLE1BQU0sZ0VBQWM7QUFDcEIsS0FBSztBQUNMOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzd2MvaGVscGVycy9zcmMvX29iamVjdF9zcHJlYWQubWpzP2I0ZDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRlZmluZVByb3BlcnR5IGZyb20gJy4vX2RlZmluZV9wcm9wZXJ0eS5tanMnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkge1xuICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9O1xuICAgIHZhciBvd25LZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcblxuICAgIGlmICh0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgb3duS2V5cyA9IG93bktleXMuY29uY2F0KE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlKS5maWx0ZXIoZnVuY3Rpb24gKHN5bSkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIHN5bSkuZW51bWVyYWJsZTtcbiAgICAgIH0pKTtcbiAgICB9XG5cbiAgICBvd25LZXlzLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/src/_object_spread.mjs\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!"), __webpack_exec__("./node_modules/next/dist/client/router.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);